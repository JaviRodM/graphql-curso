type Query {
    hello(name: String!): String!,
    quantity: Int!,
    user(id: ID) : [ User! ]!,
    author(id: ID) : [ Author! ]!,
    book(id: ID) : [ Book! ]!
}

type User {
    id: ID!
    name: String!,
    lastName: String!,
    email: String!
}

type Author {
    id: ID!,
    name: String!,
    country: String!,
    register_by: User!,
    books: [ Book! ]!
}

type Book {
    id: ID!,
    title: String!,
    description: String!,
    quantity: Int!,
    price: Int!,
    write_by: Author!,
    register_by: User!
}

type Mutation {

    createUser(
        name: String!,
        lastName: String!,
        email: String!,
        password: String!
    ): User!,

    updateUser(
        id: ID!,
        name: String,
        lastName: String,
        email: String,
        password: String
    ): User!,

    createAuthor(
        name: String!
        country: String!
        register_by: ID!
    ):Author!,

    updateAuthor(
        id: ID!
        name: String
        country: String
        register_by: ID
    ):Author!,

    createBook(
        title: String!,
        description: String!,
        quantity: Int!,
        price: Int!,
        write_by: ID!,
        register_by: ID!
    ): Book!,

    updateBook(
        id: ID!
        title: String,
        description: String,
        quantity: Int,
        price: Int,
        write_by: ID,
        register_by: ID
    ): Book!

}